{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Cudo Compute service",
    "version": "1.0.0"
  },
  "host": "rest.compute.cudo.org",
  "paths": {
    "/v1/api-keys": {
      "get": {
        "description": "List the details of all API keys created by the requesting user. This does not include the API key itself which is only visible once when the API key is created.",
        "tags": [
          "API keys"
        ],
        "summary": "List",
        "operationId": "ListApiKeys",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "pageNumber",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "pageSize",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListApiKeysResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      },
      "post": {
        "description": "Creates a new API key for the requesting user. The API key is returned in the response, and this is the only time it can be viewed.",
        "tags": [
          "API keys"
        ],
        "summary": "Generate",
        "operationId": "GenerateApiKey",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenerateApiKeyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ApiKey"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/api-keys/{name}": {
      "delete": {
        "description": "Deletes an API key, revoking all access for requests that use the key.",
        "tags": [
          "API keys"
        ],
        "summary": "Delete",
        "operationId": "DeleteApiKey",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/auth": {
      "get": {
        "description": "Responds with details of the user when suitable authentication material is sent with the request.",
        "tags": [
          "User"
        ],
        "summary": "Get",
        "operationId": "Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes your user, deleting all records of your user, and revoking access to every resource.",
        "tags": [
          "User"
        ],
        "summary": "Delete",
        "operationId": "DeleteUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/auth/create-identity-verification-session": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get identity verification session",
        "operationId": "CreateIdentityVerificationSession",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/IdentityVerificationSession"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/auth/permissions": {
      "get": {
        "tags": [
          "Permissions"
        ],
        "summary": "List",
        "operationId": "ListUserPermissions",
        "parameters": [
          {
            "type": "string",
            "name": "projectId",
            "in": "query"
          },
          {
            "type": "string",
            "name": "dataCenterId",
            "in": "query"
          },
          {
            "type": "string",
            "name": "billingAccountId",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListUserPermissionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/billing-accounts/{billingAccountId}/add-user-permission": {
      "post": {
        "tags": [
          "Permissions"
        ],
        "summary": "Add billing account user",
        "operationId": "AddBillingAccountUserPermission",
        "parameters": [
          {
            "type": "string",
            "name": "billingAccountId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "userEmail",
                "role"
              ],
              "properties": {
                "dataCenterId": {
                  "type": "string"
                },
                "projectId": {
                  "type": "string"
                },
                "role": {
                  "$ref": "#/definitions/Role"
                },
                "userEmail": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/billing-accounts/{billingAccountId}/remove-user-permission": {
      "post": {
        "tags": [
          "Permissions"
        ],
        "summary": "Remove billing account user",
        "operationId": "RemoveBillingAccountUserPermission",
        "parameters": [
          {
            "type": "string",
            "name": "billingAccountId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "userId",
                "role"
              ],
              "properties": {
                "dataCenterId": {
                  "type": "string"
                },
                "projectId": {
                  "type": "string"
                },
                "role": {
                  "$ref": "#/definitions/Role"
                },
                "userId": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/data-centers/{dataCenterId}/add-user-permission": {
      "post": {
        "tags": [
          "Permissions"
        ],
        "summary": "Add data center user",
        "operationId": "AddDataCenterUserPermission",
        "parameters": [
          {
            "type": "string",
            "name": "dataCenterId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "userEmail",
                "role"
              ],
              "properties": {
                "billingAccountId": {
                  "type": "string"
                },
                "projectId": {
                  "type": "string"
                },
                "role": {
                  "$ref": "#/definitions/Role"
                },
                "userEmail": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/data-centers/{dataCenterId}/remove-user-permission": {
      "post": {
        "tags": [
          "Permissions"
        ],
        "summary": "Remove data center user",
        "operationId": "RemoveDataCenterUserPermission",
        "parameters": [
          {
            "type": "string",
            "name": "dataCenterId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "userId",
                "role"
              ],
              "properties": {
                "billingAccountId": {
                  "type": "string"
                },
                "projectId": {
                  "type": "string"
                },
                "role": {
                  "$ref": "#/definitions/Role"
                },
                "userId": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/project/{projectId}/ssh-keys": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "List SSH keys",
        "operationId": "ListProjectSshKeys",
        "parameters": [
          {
            "type": "string",
            "name": "projectId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListProjectSshKeysResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/projects": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "List",
        "operationId": "ListProjects",
        "parameters": [
          {
            "type": "string",
            "name": "pageToken",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "pageSize",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListProjectsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Create",
        "operationId": "CreateProject",
        "parameters": [
          {
            "name": "project",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/projects/{id}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get",
        "operationId": "GetProject",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Projects"
        ],
        "summary": "Delete",
        "operationId": "DeleteProject",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/projects/{project.id}": {
      "patch": {
        "tags": [
          "Projects"
        ],
        "summary": "Update",
        "operationId": "UpdateProject",
        "parameters": [
          {
            "type": "string",
            "name": "project.id",
            "in": "path",
            "required": true
          },
          {
            "name": "project",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "billingAccountId"
              ],
              "properties": {
                "billingAccountId": {
                  "type": "string"
                },
                "createBy": {
                  "type": "string",
                  "readOnly": true
                },
                "resourceCount": {
                  "type": "integer",
                  "format": "int32",
                  "readOnly": true
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/add-user-permission": {
      "post": {
        "tags": [
          "Permissions"
        ],
        "summary": "Add project user",
        "operationId": "AddProjectUserPermission",
        "parameters": [
          {
            "type": "string",
            "name": "projectId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "userEmail",
                "role"
              ],
              "properties": {
                "billingAccountId": {
                  "type": "string"
                },
                "dataCenterId": {
                  "type": "string"
                },
                "role": {
                  "$ref": "#/definitions/Role"
                },
                "userEmail": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/count-vms": {
      "get": {
        "tags": [
          "Virtual Machines"
        ],
        "summary": "Count",
        "operationId": "CountVMs",
        "parameters": [
          {
            "type": "string",
            "name": "projectId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CountVMsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/disk/{id}/attach": {
      "patch": {
        "tags": [
          "Disks"
        ],
        "summary": "Attach storage disk to VM",
        "operationId": "AttachStorageDisk",
        "parameters": [
          {
            "type": "string",
            "name": "projectId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "vmId",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/AttachStorageDiskResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/disk/{id}/detach": {
      "put": {
        "tags": [
          "Disks"
        ],
        "summary": "Detach storage disk from VM",
        "operationId": "DetachStorageDisk",
        "parameters": [
          {
            "type": "string",
            "name": "projectId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/DetachStorageDiskResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/disks": {
      "get": {
        "tags": [
          "Disks"
        ],
        "summary": "List disks",
        "operationId": "ListDisks",
        "parameters": [
          {
            "type": "string",
            "name": "projectId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "pageNumber",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "pageSize",
            "in": "query"
          },
          {
            "type": "string",
            "name": "dataCenterId",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListDisksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Disks"
        ],
        "summary": "Create storage disk",
        "operationId": "CreateStorageDisk",
        "parameters": [
          {
            "type": "string",
            "name": "projectId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "dataCenterId": {
                  "type": "string"
                },
                "disk": {
                  "$ref": "#/definitions/Disk"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CreateStorageDiskResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/disks/{id}": {
      "get": {
        "tags": [
          "Disks"
        ],
        "summary": "List disks",
        "operationId": "GetDisk",
        "parameters": [
          {
            "type": "string",
            "name": "projectId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetDiskResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Disks"
        ],
        "summary": "Delete storage disk",
        "operationId": "DeleteStorageDisk",
        "parameters": [
          {
            "type": "string",
            "name": "projectId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/DeleteStorageDiskResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/disks/{id}/revert": {
      "post": {
        "tags": [
          "Disks"
        ],
        "summary": "Revert Disk to Snapshot",
        "operationId": "RevertDisk",
        "parameters": [
          {
            "type": "string",
            "name": "projectId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "snapshotId",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "vmId",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/RevertDiskResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/disks/{id}/snapshots": {
      "get": {
        "tags": [
          "Disks"
        ],
        "summary": "List Disk Snapshots",
        "operationId": "ListDiskSnapshots",
        "parameters": [
          {
            "type": "string",
            "name": "projectId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListDiskSnapshotsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Disks"
        ],
        "summary": "Create Disk Snapshot",
        "operationId": "CreateDiskSnapshot",
        "parameters": [
          {
            "type": "string",
            "name": "projectId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "snapshotId",
                "vmId"
              ],
              "properties": {
                "snapshotId": {
                  "type": "string"
                },
                "vmId": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CreateDiskSnapshotResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Disks"
        ],
        "summary": "Delete Disk Snapshots",
        "operationId": "DeleteDiskSnapshot",
        "parameters": [
          {
            "type": "string",
            "name": "projectId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "snapshotId",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "vmId",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/DeleteDiskSnapshotResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/images": {
      "get": {
        "tags": [
          "Virtual Machines"
        ],
        "summary": "List private VM images",
        "operationId": "ListPrivateVMImages",
        "parameters": [
          {
            "type": "string",
            "name": "projectId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "pageNumber",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "pageSize",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListPrivateVMImagesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Virtual Machines"
        ],
        "summary": "Create private VM image",
        "operationId": "CreatePrivateVMImage",
        "parameters": [
          {
            "type": "string",
            "name": "projectId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "vmId",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "id",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "description",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CreatePrivateVMImageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/images/{id}": {
      "get": {
        "tags": [
          "Virtual Machines"
        ],
        "summary": "Get private VM image",
        "operationId": "GetPrivateVMImage",
        "parameters": [
          {
            "type": "string",
            "name": "projectId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetPrivateVMImageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Virtual Machines"
        ],
        "summary": "Update private VM image",
        "operationId": "UpdatePrivateVMImage",
        "parameters": [
          {
            "type": "string",
            "name": "projectId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "description",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/UpdatePrivateVMImageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Virtual Machines"
        ],
        "summary": "Delete private VM image",
        "operationId": "DeletePrivateVMImage",
        "parameters": [
          {
            "type": "string",
            "name": "projectId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/DeletePrivateVMImageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/networks": {
      "get": {
        "tags": [
          "Networks"
        ],
        "summary": "List networks",
        "operationId": "ListNetworks",
        "parameters": [
          {
            "type": "string",
            "name": "projectId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "pageNumber",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "pageSize",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListNetworksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Networks"
        ],
        "summary": "Create network",
        "operationId": "CreateNetwork",
        "parameters": [
          {
            "type": "string",
            "name": "projectId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "dataCenterId",
                "id",
                "cidrPrefix",
                "networkId"
              ],
              "properties": {
                "cidrPrefix": {
                  "type": "string"
                },
                "dataCenterId": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "networkId": {
                  "type": "string"
                },
                "vrouterSize": {
                  "$ref": "#/definitions/VRouterSize"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CreateNetworkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/networks/security-groups": {
      "get": {
        "tags": [
          "Networks"
        ],
        "summary": "List security groups",
        "operationId": "ListSecurityGroups",
        "parameters": [
          {
            "type": "string",
            "name": "projectId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "dataCenterId",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "pageNumber",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "pageSize",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListSecurityGroupsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/networks/security-groups/{id}": {
      "get": {
        "tags": [
          "Networks"
        ],
        "summary": "Get a security group",
        "operationId": "GetSecurityGroup",
        "parameters": [
          {
            "type": "string",
            "name": "projectId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetSecurityGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Networks"
        ],
        "summary": "Delete security group",
        "operationId": "DeleteSecurityGroup",
        "parameters": [
          {
            "type": "string",
            "name": "projectId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/DeleteSecurityGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/networks/{id}": {
      "get": {
        "tags": [
          "Networks"
        ],
        "summary": "Get network",
        "operationId": "GetNetwork",
        "parameters": [
          {
            "type": "string",
            "name": "projectId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetNetworkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Networks"
        ],
        "summary": "Delete network",
        "operationId": "DeleteNetwork",
        "parameters": [
          {
            "type": "string",
            "name": "projectId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "networkId",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/DeleteNetworkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/networks/{id}/start": {
      "post": {
        "tags": [
          "Networks"
        ],
        "summary": "Start network",
        "operationId": "StartNetwork",
        "parameters": [
          {
            "type": "string",
            "name": "projectId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "networkId",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/StartNetworkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/networks/{id}/stop": {
      "post": {
        "tags": [
          "Networks"
        ],
        "summary": "Stop network",
        "operationId": "StopNetwork",
        "parameters": [
          {
            "type": "string",
            "name": "projectId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "networkId",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/StopNetworkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/object-storage/activate": {
      "post": {
        "tags": [
          "Object Storage"
        ],
        "summary": "Allow the use of S3 compatible storage in a project",
        "operationId": "Activate",
        "parameters": [
          {
            "type": "string",
            "name": "projectId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "dataCenterId": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/object-storage/buckets": {
      "get": {
        "tags": [
          "Object Storage"
        ],
        "summary": "List buckets",
        "operationId": "ListObjectStorageBuckets",
        "parameters": [
          {
            "type": "string",
            "name": "projectId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "pageNumber",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "pageSize",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListObjectStorageBucketsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/object-storage/buckets/{id}": {
      "get": {
        "tags": [
          "Object Storage"
        ],
        "summary": "Get details for a bucket",
        "operationId": "GetObjectStorageBucket",
        "parameters": [
          {
            "type": "string",
            "name": "projectId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ObjectStorageBucket"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/object-storage/session-key": {
      "get": {
        "tags": [
          "Object Storage"
        ],
        "summary": "Generate temporary key for storage bucket access",
        "operationId": "GetObjectStorageSessionKey",
        "parameters": [
          {
            "type": "string",
            "name": "projectId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "dataCenterId",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetObjectStorageSessionKeyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/object-storage/users": {
      "get": {
        "tags": [
          "Object Storage"
        ],
        "summary": "List storage users",
        "operationId": "ListObjectStorageUsers",
        "parameters": [
          {
            "type": "string",
            "name": "projectId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "pageNumber",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "pageSize",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListObjectStorageUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Object Storage"
        ],
        "summary": "Create user that stores keys for storage buckets",
        "operationId": "CreateObjectStorageUser",
        "parameters": [
          {
            "type": "string",
            "name": "projectId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ObjectStorageUser"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/object-storage/users/{id}": {
      "post": {
        "tags": [
          "Object Storage"
        ],
        "summary": "Generate access key for storage buckets",
        "operationId": "GenerateObjectStorageKey",
        "parameters": [
          {
            "type": "string",
            "name": "projectId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ObjectStorageKey"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Object Storage"
        ],
        "summary": "Delete object storage user",
        "operationId": "DeleteObjectStorageUser",
        "parameters": [
          {
            "type": "string",
            "name": "projectId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/DeleteObjectStorageUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/object-storage/users/{id}/keys": {
      "get": {
        "tags": [
          "Object Storage"
        ],
        "summary": "List storage user keys",
        "operationId": "ListObjectStorageKeys",
        "parameters": [
          {
            "type": "string",
            "name": "projectId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "pageNumber",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "pageSize",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListObjectStorageKeysResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Object Storage"
        ],
        "summary": "Delete object storage user",
        "operationId": "DeleteObjectStorageKey",
        "parameters": [
          {
            "type": "string",
            "name": "projectId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "accessKey",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/DeleteObjectStorageKeyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/remove-user-permission": {
      "post": {
        "tags": [
          "Permissions"
        ],
        "summary": "Remove project user",
        "operationId": "RemoveProjectUserPermission",
        "parameters": [
          {
            "type": "string",
            "name": "projectId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "userId",
                "role"
              ],
              "properties": {
                "billingAccountId": {
                  "type": "string"
                },
                "dataCenterId": {
                  "type": "string"
                },
                "role": {
                  "$ref": "#/definitions/Role"
                },
                "userId": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/vm": {
      "post": {
        "tags": [
          "Virtual Machines"
        ],
        "summary": "Create virtual machine",
        "operationId": "CreateVM",
        "parameters": [
          {
            "type": "string",
            "name": "projectId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "vmId",
                "bootDiskImageId"
              ],
              "properties": {
                "bootDisk": {
                  "$ref": "#/definitions/Disk"
                },
                "bootDiskImageId": {
                  "type": "string"
                },
                "cpuModel": {
                  "type": "string"
                },
                "customSshKeys": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "dataCenterId": {
                  "type": "string"
                },
                "gpuModel": {
                  "type": "string"
                },
                "gpus": {
                  "type": "integer",
                  "format": "int32"
                },
                "machineType": {
                  "type": "string"
                },
                "maxPriceHr": {
                  "$ref": "#/definitions/Decimal"
                },
                "memoryGib": {
                  "type": "integer",
                  "format": "int32"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "nics": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/CreateVMRequest.NIC"
                  }
                },
                "password": {
                  "type": "string"
                },
                "securityGroupIds": {
                  "type": "array",
                  "title": "ignored if any nics are provided",
                  "items": {
                    "type": "string"
                  }
                },
                "sshKeySource": {
                  "$ref": "#/definitions/SshKeySource"
                },
                "startScript": {
                  "type": "string"
                },
                "storageDiskIds": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "vcpus": {
                  "type": "integer",
                  "format": "int32"
                },
                "vmId": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CreateVMResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/vms": {
      "get": {
        "tags": [
          "Virtual Machines"
        ],
        "summary": "List",
        "operationId": "ListVMs",
        "parameters": [
          {
            "type": "string",
            "name": "projectId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "networkId",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListVMsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/vms/{id}": {
      "get": {
        "tags": [
          "Virtual Machines"
        ],
        "summary": "Get",
        "operationId": "GetVM",
        "parameters": [
          {
            "type": "string",
            "name": "projectId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetVMResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/vms/{id}/connect": {
      "get": {
        "tags": [
          "Virtual Machines"
        ],
        "summary": "Connect via VNC",
        "operationId": "ConnectVM",
        "parameters": [
          {
            "type": "string",
            "name": "projectId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "connectionId",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ConnectVMResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/vms/{id}/disks": {
      "get": {
        "tags": [
          "Virtual Machines"
        ],
        "summary": "List disks attached to VM",
        "operationId": "ListVMDisks",
        "parameters": [
          {
            "type": "string",
            "name": "projectId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListVMDisksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Virtual Machines"
        ],
        "summary": "Resize a VM's disk",
        "operationId": "ResizeVMDisk",
        "parameters": [
          {
            "type": "string",
            "name": "projectId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "diskId",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "sizeGib",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ResizeVMDiskResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/vms/{id}/monitor": {
      "get": {
        "tags": [
          "Virtual Machines"
        ],
        "summary": "Monitor",
        "operationId": "MonitorVM",
        "parameters": [
          {
            "type": "string",
            "name": "projectId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/MonitorVMResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/vms/{id}/reboot": {
      "post": {
        "tags": [
          "Virtual Machines"
        ],
        "summary": "Reboot",
        "operationId": "RebootVM",
        "parameters": [
          {
            "type": "string",
            "name": "projectId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/RebootVMResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/vms/{id}/resize": {
      "post": {
        "tags": [
          "Virtual Machines"
        ],
        "summary": "Resize vCPU and memory of VM",
        "operationId": "ResizeVM",
        "parameters": [
          {
            "type": "string",
            "name": "projectId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "vcpus",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "memoryGib",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ResizeVMResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/vms/{id}/start": {
      "post": {
        "tags": [
          "Virtual Machines"
        ],
        "summary": "Start",
        "operationId": "StartVM",
        "parameters": [
          {
            "type": "string",
            "name": "projectId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/StartVMResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/vms/{id}/stop": {
      "post": {
        "tags": [
          "Virtual Machines"
        ],
        "summary": "Stop",
        "operationId": "StopVM",
        "parameters": [
          {
            "type": "string",
            "name": "projectId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/StopVMResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/vms/{id}/terminate": {
      "post": {
        "tags": [
          "Virtual Machines"
        ],
        "summary": "Terminate",
        "operationId": "TerminateVM",
        "parameters": [
          {
            "type": "string",
            "name": "projectId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/TerminateVMResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/projects/{securityGroup.projectId}/networks/security-groups": {
      "post": {
        "tags": [
          "Networks"
        ],
        "summary": "Create security group",
        "operationId": "CreateSecurityGroup",
        "parameters": [
          {
            "type": "string",
            "name": "securityGroup.projectId",
            "in": "path",
            "required": true
          },
          {
            "name": "securityGroup",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "dataCenterId",
                "id"
              ],
              "properties": {
                "dataCenterId": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "rules": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/Rule"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CreateSecurityGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/projects/{securityGroup.projectId}/networks/security-groups/{securityGroup.id}": {
      "patch": {
        "tags": [
          "Networks"
        ],
        "summary": "Update security group",
        "operationId": "UpdateSecurityGroup",
        "parameters": [
          {
            "type": "string",
            "name": "securityGroup.projectId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "securityGroup.id",
            "in": "path",
            "required": true
          },
          {
            "name": "securityGroup",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "dataCenterId"
              ],
              "properties": {
                "dataCenterId": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "rules": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/Rule"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/UpdateSecurityGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/regions": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Regions",
        "operationId": "ListRegions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListRegionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/ssh-keys": {
      "get": {
        "tags": [
          "SSH keys"
        ],
        "summary": "List",
        "operationId": "ListSshKeys",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "pageNumber",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "pageSize",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListSshKeysResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "SSH keys"
        ],
        "summary": "Create",
        "operationId": "CreateSshKey",
        "parameters": [
          {
            "name": "sshKey",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SshKey"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SshKey"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/ssh-keys/{id}": {
      "get": {
        "tags": [
          "SSH keys"
        ],
        "summary": "Get",
        "operationId": "GetSshKey",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SshKey"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SSH keys"
        ],
        "summary": "Delete",
        "operationId": "DeleteSshKey",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/vms/data-centers": {
      "get": {
        "tags": [
          "Virtual Machines"
        ],
        "summary": "List data centers",
        "operationId": "ListVMDataCenters",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "regionId",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "renewableEnergy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListVMDataCentersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/vms/machine-types": {
      "get": {
        "tags": [
          "Virtual Machines"
        ],
        "summary": "List machine types",
        "operationId": "ListVMMachineTypes",
        "parameters": [
          {
            "type": "string",
            "name": "cpuModel",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "gpu",
            "in": "query"
          },
          {
            "type": "string",
            "name": "gpuModel",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "memoryGib",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "orderBy",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "pageNumber",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "pageSize",
            "in": "query"
          },
          {
            "type": "string",
            "name": "regionId",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "storageGib",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "vcpu",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "dataCenterId",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "publicIpv4",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListVMMachineTypesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/v1/vms/public-images": {
      "get": {
        "tags": [
          "Virtual Machines"
        ],
        "summary": "List public VM images",
        "operationId": "ListPublicVMImages",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListPublicVMImagesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Any": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ApiKey": {
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "readOnly": true
        },
        "key": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "AttachStorageDiskResponse": {
      "type": "object"
    },
    "ConnectVMResponse": {
      "type": "object",
      "required": [
        "connectUrl",
        "token"
      ],
      "properties": {
        "connectUrl": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "CountVMsResponse": {
      "type": "object",
      "required": [
        "count"
      ],
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "CpuModelCategory": {
      "type": "object",
      "required": [
        "name",
        "minPriceHr",
        "countVmAvailable"
      ],
      "properties": {
        "countVmAvailable": {
          "type": "integer",
          "format": "int32"
        },
        "minPriceHr": {
          "$ref": "#/definitions/Decimal"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "CreateDiskSnapshotResponse": {
      "type": "object"
    },
    "CreateNetworkResponse": {
      "type": "object"
    },
    "CreatePrivateVMImageResponse": {
      "type": "object",
      "properties": {
        "image": {
          "$ref": "#/definitions/v1.PrivateImage"
        }
      }
    },
    "CreateSecurityGroupResponse": {
      "type": "object",
      "required": [
        "securityGroup"
      ],
      "properties": {
        "securityGroup": {
          "$ref": "#/definitions/SecurityGroup"
        }
      }
    },
    "CreateStorageDiskResponse": {
      "type": "object"
    },
    "CreateVMRequest.NIC": {
      "type": "object",
      "properties": {
        "assignPublicIp": {
          "type": "boolean"
        },
        "networkId": {
          "type": "string"
        },
        "securityGroupIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CreateVMResponse": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "vm": {
          "$ref": "#/definitions/VM"
        }
      }
    },
    "DataCenterCategory": {
      "type": "object",
      "required": [
        "id",
        "minPriceHr",
        "countVmAvailable",
        "renewableEnergy"
      ],
      "properties": {
        "countVmAvailable": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "string"
        },
        "minPriceHr": {
          "$ref": "#/definitions/Decimal"
        },
        "renewableEnergy": {
          "type": "boolean"
        }
      }
    },
    "Decimal": {
      "description": "A representation of a decimal value, such as 2.5. Clients may convert values\ninto language-native decimal formats, such as Java's [BigDecimal][] or\nPython's [decimal.Decimal][].\n\n[BigDecimal]:\nhttps://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/math/BigDecimal.html\n[decimal.Decimal]: https://docs.python.org/3/library/decimal.html",
      "type": "object",
      "properties": {
        "value": {
          "description": "The decimal value, as a string.\n\nThe string representation consists of an optional sign, `+` (`U+002B`)\nor `-` (`U+002D`), followed by a sequence of zero or more decimal digits\n(\"the integer\"), optionally followed by a fraction, optionally followed\nby an exponent.\n\nThe fraction consists of a decimal point followed by zero or more decimal\ndigits. The string must contain at least one digit in either the integer\nor the fraction. The number formed by the sign, the integer and the\nfraction is referred to as the significand.\n\nThe exponent consists of the character `e` (`U+0065`) or `E` (`U+0045`)\nfollowed by one or more decimal digits.\n\nServices **should** normalize decimal values before storing them by:\n\n  - Removing an explicitly-provided `+` sign (`+2.5` -\u003e `2.5`).\n  - Replacing a zero-length integer value with `0` (`.5` -\u003e `0.5`).\n  - Coercing the exponent character to lower-case (`2.5E8` -\u003e `2.5e8`).\n  - Removing an explicitly-provided zero exponent (`2.5e0` -\u003e `2.5`).\n\nServices **may** perform additional normalization based on its own needs\nand the internal decimal implementation selected, such as shifting the\ndecimal point and exponent value together (example: `2.5e-1` \u003c-\u003e `0.25`).\nAdditionally, services **may** preserve trailing zeroes in the fraction\nto indicate increased precision, but are not required to do so.\n\nNote that only the `.` character is supported to divide the integer\nand the fraction; `,` **should not** be supported regardless of locale.\nAdditionally, thousand separators **should not** be supported. If a\nservice does support them, values **must** be normalized.\n\nThe ENBF grammar is:\n\n    DecimalString =\n      [Sign] Significand [Exponent];\n\n    Sign = '+' | '-';\n\n    Significand =\n      Digits ['.'] [Digits] | [Digits] '.' Digits;\n\n    Exponent = ('e' | 'E') [Sign] Digits;\n\n    Digits = { '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' };\n\nServices **should** clearly document the range of supported values, the\nmaximum supported precision (total number of digits), and, if applicable,\nthe scale (number of digits after the decimal point), as well as how it\nbehaves when receiving out-of-bounds values.\n\nServices **may** choose to accept values passed as input even when the\nvalue has a higher precision or scale than the service supports, and\n**should** round the value to fit the supported scale. Alternatively, the\nservice **may** error with `400 Bad Request` (`INVALID_ARGUMENT` in gRPC)\nif precision would be lost.\n\nServices **should** error with `400 Bad Request` (`INVALID_ARGUMENT` in\ngRPC) if the service receives a value outside of the supported range.",
          "type": "string"
        }
      }
    },
    "DeleteDiskSnapshotResponse": {
      "type": "object"
    },
    "DeleteNetworkResponse": {
      "type": "object"
    },
    "DeleteObjectStorageKeyResponse": {
      "type": "object"
    },
    "DeleteObjectStorageUserResponse": {
      "type": "object"
    },
    "DeletePrivateVMImageResponse": {
      "type": "object"
    },
    "DeleteSecurityGroupResponse": {
      "type": "object"
    },
    "DeleteStorageDiskResponse": {
      "type": "object"
    },
    "DetachStorageDiskResponse": {
      "type": "object"
    },
    "Disk": {
      "type": "object",
      "required": [
        "id",
        "sizeGib"
      ],
      "properties": {
        "createTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "dataCenterId": {
          "type": "string",
          "readOnly": true
        },
        "diskState": {
          "$ref": "#/definitions/DiskState",
          "readOnly": true
        },
        "diskType": {
          "$ref": "#/definitions/DiskType",
          "readOnly": true
        },
        "id": {
          "type": "string"
        },
        "privateImageId": {
          "type": "string",
          "readOnly": true
        },
        "projectId": {
          "type": "string",
          "readOnly": true
        },
        "publicImageId": {
          "type": "string",
          "readOnly": true
        },
        "sizeGib": {
          "type": "integer",
          "format": "int32"
        },
        "storageClass": {
          "$ref": "#/definitions/Disk.StorageClass"
        },
        "vmId": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Disk.StorageClass": {
      "type": "string",
      "default": "STORAGE_CLASS_UNKNOWN",
      "enum": [
        "STORAGE_CLASS_UNKNOWN",
        "STORAGE_CLASS_LOCAL",
        "STORAGE_CLASS_NETWORK"
      ]
    },
    "DiskState": {
      "type": "string",
      "default": "DISK_STATE_INIT",
      "enum": [
        "DISK_STATE_INIT",
        "DISK_STATE_READY",
        "DISK_STATE_USED",
        "DISK_STATE_DISABLED",
        "DISK_STATE_LOCKED",
        "DISK_STATE_ERROR",
        "DISK_STATE_CLONE",
        "DISK_STATE_DELETE"
      ]
    },
    "DiskStoragePriceHr": {
      "type": "object",
      "properties": {
        "diskGibPriceHr": {
          "$ref": "#/definitions/Decimal"
        },
        "snapshotGibPriceHr": {
          "$ref": "#/definitions/Decimal"
        },
        "storageClass": {
          "$ref": "#/definitions/VMDataCenter.StorageClass"
        }
      }
    },
    "DiskType": {
      "type": "string",
      "default": "DISK_TYPE_UNKNOWN",
      "enum": [
        "DISK_TYPE_UNKNOWN",
        "DISK_TYPE_BOOT",
        "DISK_TYPE_STORAGE"
      ]
    },
    "GenerateApiKeyRequest": {
      "type": "object",
      "required": [
        "apikeyId"
      ],
      "properties": {
        "apikeyId": {
          "description": "The identifier to use for the api key, which will become the final component of\nthe api key's resource name.\nThis value should be 4-63 characters, and valid characters\nare /[a-z][0-9]-/.",
          "type": "string"
        }
      }
    },
    "GetDiskResponse": {
      "type": "object",
      "properties": {
        "disk": {
          "$ref": "#/definitions/Disk"
        },
        "snapshots": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Snapshot"
          }
        }
      }
    },
    "GetNetworkResponse": {
      "type": "object",
      "required": [
        "network"
      ],
      "properties": {
        "network": {
          "$ref": "#/definitions/Network"
        }
      }
    },
    "GetObjectStorageSessionKeyResponse": {
      "type": "object",
      "properties": {
        "accessKey": {
          "type": "string"
        },
        "endpoint": {
          "type": "string"
        },
        "secretKey": {
          "type": "string"
        },
        "sessionName": {
          "type": "string"
        },
        "sessionToken": {
          "type": "string"
        }
      }
    },
    "GetPrivateVMImageResponse": {
      "type": "object",
      "properties": {
        "image": {
          "$ref": "#/definitions/v1.PrivateImage"
        }
      }
    },
    "GetSecurityGroupResponse": {
      "type": "object",
      "required": [
        "securityGroup"
      ],
      "properties": {
        "securityGroup": {
          "$ref": "#/definitions/SecurityGroup"
        }
      }
    },
    "GetVMResponse": {
      "type": "object",
      "required": [
        "VM"
      ],
      "properties": {
        "VM": {
          "$ref": "#/definitions/VM"
        }
      }
    },
    "GpuModelCategory": {
      "type": "object",
      "required": [
        "name",
        "minPriceHr",
        "countVmAvailable"
      ],
      "properties": {
        "countVmAvailable": {
          "type": "integer",
          "format": "int32"
        },
        "minPriceHr": {
          "$ref": "#/definitions/Decimal"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "HostConfigCategory": {
      "type": "object",
      "required": [
        "id",
        "cpuModel",
        "gpuModel",
        "dataCenterId",
        "vcpuPriceHr",
        "totalVcpuPriceHr",
        "memoryGibPriceHr",
        "totalMemoryPriceHr",
        "gpuPriceHr",
        "totalGpuPriceHr",
        "storageGibPriceHr",
        "totalStoragePriceHr",
        "totalPriceHr",
        "countVmAvailable",
        "machineType",
        "renewableEnergy",
        "ipv4PriceHr"
      ],
      "properties": {
        "countVmAvailable": {
          "type": "integer",
          "format": "int32"
        },
        "cpuModel": {
          "type": "string"
        },
        "dataCenterId": {
          "type": "string"
        },
        "gpuModel": {
          "type": "string"
        },
        "gpuPriceHr": {
          "$ref": "#/definitions/Decimal"
        },
        "id": {
          "type": "string"
        },
        "ipv4PriceHr": {
          "$ref": "#/definitions/Decimal"
        },
        "machineType": {
          "type": "string"
        },
        "memoryGibPriceHr": {
          "$ref": "#/definitions/Decimal"
        },
        "renewableEnergy": {
          "type": "boolean"
        },
        "storageGibPriceHr": {
          "$ref": "#/definitions/Decimal"
        },
        "totalGpuPriceHr": {
          "$ref": "#/definitions/Decimal"
        },
        "totalMemoryPriceHr": {
          "$ref": "#/definitions/Decimal"
        },
        "totalPriceHr": {
          "$ref": "#/definitions/Decimal"
        },
        "totalStoragePriceHr": {
          "$ref": "#/definitions/Decimal"
        },
        "totalVcpuPriceHr": {
          "$ref": "#/definitions/Decimal"
        },
        "vcpuPriceHr": {
          "$ref": "#/definitions/Decimal"
        }
      }
    },
    "IdentityVerificationSession": {
      "type": "object",
      "properties": {
        "clientSecret": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "Image": {
      "type": "object",
      "required": [
        "id",
        "name",
        "description",
        "displayName",
        "platform",
        "sizeGib"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "platform": {
          "type": "string"
        },
        "sizeGib": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ListApiKeysResponse": {
      "type": "object",
      "required": [
        "apiKeys",
        "totalCount",
        "pageNumber",
        "pageSize"
      ],
      "properties": {
        "apiKeys": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ApiKey"
          }
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ListDiskSnapshotsResponse": {
      "type": "object",
      "required": [
        "snapshots"
      ],
      "properties": {
        "snapshots": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Snapshot"
          }
        }
      }
    },
    "ListDisksResponse": {
      "type": "object",
      "required": [
        "totalCount",
        "pageNumber",
        "pageSize"
      ],
      "properties": {
        "disks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Disk"
          }
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ListNetworksResponse": {
      "type": "object",
      "required": [
        "networks",
        "totalCount",
        "pageNumber",
        "pageSize"
      ],
      "properties": {
        "networks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Network"
          }
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ListObjectStorageBucketsResponse": {
      "type": "object",
      "required": [
        "buckets",
        "totalCount",
        "pageNumber",
        "pageSize"
      ],
      "properties": {
        "buckets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ObjectStorageBucket"
          }
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ListObjectStorageKeysResponse": {
      "type": "object",
      "required": [
        "keys",
        "totalCount",
        "pageNumber",
        "pageSize"
      ],
      "properties": {
        "keys": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ObjectStorageKey"
          }
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ListObjectStorageUsersResponse": {
      "type": "object",
      "required": [
        "users",
        "totalCount",
        "pageNumber",
        "pageSize"
      ],
      "properties": {
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        },
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ObjectStorageUser"
          }
        }
      }
    },
    "ListPrivateVMImagesResponse": {
      "type": "object",
      "required": [
        "totalCount",
        "pageNumber",
        "pageSize"
      ],
      "properties": {
        "images": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ListPrivateVMImagesResponse.PrivateImage"
          }
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ListPrivateVMImagesResponse.PrivateImage": {
      "type": "object",
      "properties": {
        "dataCenterId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "projectId": {
          "type": "string"
        },
        "sizeGib": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ListProjectSshKeysResponse": {
      "type": "object",
      "required": [
        "sshKeys"
      ],
      "properties": {
        "sshKeys": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SshKey"
          }
        }
      }
    },
    "ListProjectsResponse": {
      "type": "object",
      "required": [
        "projects",
        "pageToken",
        "pageSize"
      ],
      "properties": {
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "type": "string"
        },
        "projects": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Project"
          }
        }
      }
    },
    "ListPublicVMImagesResponse": {
      "type": "object",
      "required": [
        "images"
      ],
      "properties": {
        "images": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Image"
          }
        }
      }
    },
    "ListRegionsResponse": {
      "type": "object",
      "required": [
        "regions"
      ],
      "properties": {
        "regions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Region"
          }
        }
      }
    },
    "ListSecurityGroupsResponse": {
      "type": "object",
      "required": [
        "securityGroups",
        "totalCount",
        "pageNumber",
        "pageSize"
      ],
      "properties": {
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "securityGroups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SecurityGroup"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ListSshKeysResponse": {
      "type": "object",
      "required": [
        "sshKeys",
        "totalCount",
        "pageNumber",
        "pageSize"
      ],
      "properties": {
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "sshKeys": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SshKey"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ListUserPermissionsResponse": {
      "type": "object",
      "required": [
        "projectPermissions",
        "dataCenterPermissions",
        "billingAccountPermissions"
      ],
      "properties": {
        "billingAccountPermissions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/UserPermission"
          }
        },
        "dataCenterPermissions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/UserPermission"
          }
        },
        "projectPermissions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/UserPermission"
          }
        }
      }
    },
    "ListVMDataCentersResponse": {
      "type": "object",
      "required": [
        "dataCenters"
      ],
      "properties": {
        "dataCenters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/VMDataCenter"
          }
        }
      }
    },
    "ListVMDisksResponse": {
      "type": "object",
      "properties": {
        "disks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Disk"
          }
        }
      }
    },
    "ListVMMachineTypesRequest": {
      "type": "object",
      "required": [
        "memoryGib",
        "vcpu"
      ],
      "properties": {
        "cpuModel": {
          "type": "string"
        },
        "dataCenterId": {
          "type": "string"
        },
        "gpu": {
          "type": "integer",
          "format": "int32"
        },
        "gpuModel": {
          "type": "string"
        },
        "memoryGib": {
          "type": "integer",
          "format": "int32"
        },
        "orderBy": {
          "type": "string"
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "publicIpv4": {
          "type": "boolean"
        },
        "regionId": {
          "type": "string"
        },
        "storageGib": {
          "type": "integer",
          "format": "int32"
        },
        "vcpu": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ListVMMachineTypesResponse": {
      "type": "object",
      "required": [
        "request",
        "maxVcpu",
        "maxMemoryGib",
        "maxGpu",
        "countVmAvailable",
        "cpuModels",
        "gpuModels",
        "dataCenters",
        "hostConfigs"
      ],
      "properties": {
        "countVmAvailable": {
          "type": "integer",
          "format": "int32"
        },
        "cpuModels": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/CpuModelCategory"
          }
        },
        "dataCenters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/DataCenterCategory"
          }
        },
        "gpuModels": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GpuModelCategory"
          }
        },
        "hostConfigs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/HostConfigCategory"
          }
        },
        "maxGpu": {
          "type": "integer",
          "format": "int32"
        },
        "maxMemoryGib": {
          "type": "integer",
          "format": "int32"
        },
        "maxVcpu": {
          "type": "integer",
          "format": "int32"
        },
        "request": {
          "$ref": "#/definitions/ListVMMachineTypesRequest"
        }
      }
    },
    "ListVMsResponse": {
      "type": "object",
      "properties": {
        "VMs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/VM"
          }
        }
      }
    },
    "MonitorVMResponse": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/VMMonitoringItem"
          }
        }
      }
    },
    "Network": {
      "type": "object",
      "properties": {
        "activeState": {
          "type": "string"
        },
        "dataCenterId": {
          "type": "string"
        },
        "externalIpAddress": {
          "type": "string"
        },
        "gateway": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "initState": {
          "type": "string"
        },
        "internalIpAddress": {
          "type": "string"
        },
        "ipRange": {
          "type": "string"
        },
        "priceHr": {
          "$ref": "#/definitions/Decimal"
        },
        "shortState": {
          "type": "string"
        },
        "size": {
          "$ref": "#/definitions/VRouterSize"
        }
      }
    },
    "NetworkPriceHr": {
      "type": "object",
      "properties": {
        "priceHr": {
          "$ref": "#/definitions/Decimal"
        },
        "size": {
          "$ref": "#/definitions/VRouterSize"
        }
      }
    },
    "ObjectStorageBucket": {
      "type": "object",
      "properties": {
        "billableBytes": {
          "type": "string",
          "format": "int64"
        },
        "dataCenterId": {
          "type": "string"
        },
        "endpoint": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "objectCount": {
          "type": "string",
          "format": "int64"
        },
        "projectId": {
          "type": "string"
        },
        "sizeBytes": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "ObjectStorageKey": {
      "type": "object",
      "properties": {
        "accessKey": {
          "type": "string"
        },
        "createBy": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string"
        },
        "secretKey": {
          "type": "string"
        }
      }
    },
    "ObjectStorageUser": {
      "type": "object",
      "properties": {
        "createBy": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string"
        },
        "keyCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Profile": {
      "type": "object",
      "properties": {
        "emailAddress": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "picture": {
          "type": "string"
        }
      }
    },
    "Project": {
      "type": "object",
      "required": [
        "id",
        "billingAccountId"
      ],
      "properties": {
        "billingAccountId": {
          "type": "string"
        },
        "createBy": {
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "string"
        },
        "resourceCount": {
          "type": "integer",
          "format": "int32",
          "readOnly": true
        }
      }
    },
    "Protocol": {
      "type": "string",
      "default": "PROTOCOL_UNKNOWN",
      "enum": [
        "PROTOCOL_UNKNOWN",
        "PROTOCOL_ALL",
        "PROTOCOL_TCP",
        "PROTOCOL_UDP",
        "PROTOCOL_ICMP",
        "PROTOCOL_ICMPv6",
        "PROTOCOL_IPSEC"
      ]
    },
    "RebootVMResponse": {
      "type": "object"
    },
    "Region": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "ResizeVMDiskResponse": {
      "type": "object"
    },
    "ResizeVMResponse": {
      "type": "object",
      "required": [
        "vm"
      ],
      "properties": {
        "vm": {
          "$ref": "#/definitions/VM"
        }
      }
    },
    "RevertDiskResponse": {
      "type": "object"
    },
    "Role": {
      "type": "string",
      "default": "UNKNOWN",
      "enum": [
        "UNKNOWN",
        "OWNER",
        "VIEWER",
        "EDITOR"
      ]
    },
    "Rule": {
      "type": "object",
      "properties": {
        "icmpType": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "ipRangeCidr": {
          "type": "string",
          "title": "single IP or CIDR format range to apply rule to"
        },
        "ports": {
          "type": "string"
        },
        "protocol": {
          "$ref": "#/definitions/Protocol"
        },
        "ruleType": {
          "$ref": "#/definitions/RuleType"
        }
      }
    },
    "RuleType": {
      "type": "string",
      "default": "RULE_TYPE_UNKNOWN",
      "enum": [
        "RULE_TYPE_UNKNOWN",
        "RULE_TYPE_INBOUND",
        "RULE_TYPE_OUTBOUND"
      ]
    },
    "SecurityGroup": {
      "type": "object",
      "required": [
        "dataCenterId",
        "id"
      ],
      "properties": {
        "dataCenterId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "projectId": {
          "type": "string"
        },
        "rules": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Rule"
          }
        }
      }
    },
    "SecurityGroupRule": {
      "type": "object",
      "properties": {
        "icmpType": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "ipRangeCidr": {
          "type": "string",
          "title": "single IP or CIDR format range to apply rule to"
        },
        "ports": {
          "type": "string"
        },
        "protocol": {
          "$ref": "#/definitions/Protocol"
        },
        "ruleType": {
          "$ref": "#/definitions/RuleType"
        }
      }
    },
    "Snapshot": {
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string"
        },
        "sizeGib": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SshKey": {
      "type": "object",
      "required": [
        "publicKey"
      ],
      "properties": {
        "comment": {
          "type": "string",
          "readOnly": true
        },
        "createTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "fingerprint": {
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "readOnly": true
        },
        "publicKey": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SshKeySource": {
      "type": "string",
      "default": "SSH_KEY_SOURCE_UNKNOWN",
      "enum": [
        "SSH_KEY_SOURCE_UNKNOWN",
        "SSH_KEY_SOURCE_PROJECT",
        "SSH_KEY_SOURCE_USER",
        "SSH_KEY_SOURCE_NONE"
      ]
    },
    "StartNetworkResponse": {
      "type": "object"
    },
    "StartVMResponse": {
      "type": "object"
    },
    "Status": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Any"
          }
        },
        "message": {
          "type": "string"
        }
      }
    },
    "StopNetworkResponse": {
      "type": "object"
    },
    "StopVMResponse": {
      "type": "object"
    },
    "TerminateVMResponse": {
      "type": "object"
    },
    "UpdatePrivateVMImageResponse": {
      "type": "object"
    },
    "UpdateSecurityGroupResponse": {
      "type": "object",
      "required": [
        "securityGroup"
      ],
      "properties": {
        "securityGroup": {
          "$ref": "#/definitions/SecurityGroup"
        }
      }
    },
    "UserPermission": {
      "type": "object",
      "required": [
        "userId",
        "userEmail",
        "userPicture",
        "role",
        "permissionRole"
      ],
      "properties": {
        "permissionRole": {
          "$ref": "#/definitions/Role"
        },
        "role": {
          "type": "string"
        },
        "userEmail": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "userPicture": {
          "type": "string"
        }
      }
    },
    "VM": {
      "type": "object",
      "properties": {
        "activeState": {
          "type": "string"
        },
        "bootDisk": {
          "$ref": "#/definitions/Disk"
        },
        "bootDiskSizeGib": {
          "type": "integer",
          "format": "int64"
        },
        "cpuModel": {
          "type": "string"
        },
        "createBy": {
          "type": "string",
          "readOnly": true
        },
        "datacenterId": {
          "type": "string",
          "readOnly": true
        },
        "externalIpAddress": {
          "type": "string"
        },
        "gpuModel": {
          "type": "string"
        },
        "gpuQuantity": {
          "type": "integer",
          "format": "int64"
        },
        "id": {
          "type": "string"
        },
        "imageId": {
          "type": "string"
        },
        "imageName": {
          "type": "string"
        },
        "initState": {
          "type": "string"
        },
        "internalIpAddress": {
          "type": "string"
        },
        "lcmState": {
          "type": "string"
        },
        "machineType": {
          "type": "string"
        },
        "memory": {
          "type": "integer",
          "format": "int64"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "nics": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/VM.NIC"
          }
        },
        "oneState": {
          "type": "string"
        },
        "priceHr": {
          "type": "number",
          "format": "float"
        },
        "privateImageId": {
          "type": "string"
        },
        "publicImageId": {
          "type": "string"
        },
        "publicImageName": {
          "type": "string"
        },
        "publicIpAddress": {
          "type": "string"
        },
        "regionId": {
          "type": "string",
          "readOnly": true
        },
        "regionName": {
          "type": "string",
          "readOnly": true
        },
        "renewableEnergy": {
          "type": "boolean"
        },
        "rules": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SecurityGroupRule"
          }
        },
        "securityGroupIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "shortState": {
          "type": "string"
        },
        "storageDisks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Disk"
          }
        },
        "vcpus": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "VM.NIC": {
      "type": "object",
      "properties": {
        "externalIpAddress": {
          "type": "string"
        },
        "internalIpAddress": {
          "type": "string"
        },
        "networkAddress": {
          "type": "string"
        },
        "networkId": {
          "type": "string"
        },
        "securityGroupIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "VMDataCenter": {
      "type": "object",
      "required": [
        "id",
        "regionId",
        "supplierName",
        "renewableEnergy"
      ],
      "properties": {
        "diskPoolPricing": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/DiskStoragePriceHr"
          }
        },
        "id": {
          "type": "string"
        },
        "ipv4PriceHr": {
          "$ref": "#/definitions/Decimal"
        },
        "networkPricing": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/NetworkPriceHr"
          }
        },
        "regionId": {
          "type": "string"
        },
        "renewableEnergy": {
          "type": "boolean"
        },
        "supplierName": {
          "type": "string"
        }
      }
    },
    "VMDataCenter.StorageClass": {
      "type": "string",
      "default": "STORAGE_CLASS_UNKNOWN",
      "enum": [
        "STORAGE_CLASS_UNKNOWN",
        "STORAGE_CLASS_LOCAL",
        "STORAGE_CLASS_NETWORK"
      ]
    },
    "VMMonitoringItem": {
      "type": "object",
      "properties": {
        "cpu": {
          "type": "number",
          "format": "float"
        },
        "diskRdBytes": {
          "type": "integer",
          "format": "int32"
        },
        "diskRdIops": {
          "type": "integer",
          "format": "int32"
        },
        "diskWrBytes": {
          "type": "integer",
          "format": "int32"
        },
        "diskWrIops": {
          "type": "integer",
          "format": "int32"
        },
        "memory": {
          "type": "integer",
          "format": "int32"
        },
        "netRx": {
          "type": "integer",
          "format": "int32"
        },
        "netTx": {
          "type": "integer",
          "format": "int32"
        },
        "timestamp": {
          "type": "string"
        }
      }
    },
    "VRouterSize": {
      "type": "string",
      "default": "VROUTER_INSTANCE_UNKNOWN",
      "enum": [
        "VROUTER_INSTANCE_UNKNOWN",
        "VROUTER_INSTANCE_SMALL",
        "VROUTER_INSTANCE_MEDIUM",
        "VROUTER_INSTANCE_LARGE"
      ]
    },
    "v1.PrivateImage": {
      "type": "object",
      "properties": {
        "dataCenterId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "projectId": {
          "type": "string"
        },
        "sizeGib": {
          "type": "integer",
          "format": "int32"
        }
      }
    }
  }
}