// Code generated by go-swagger; DO NOT EDIT.

package disks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/CudoVentures/terraform-provider-cudo/internal/models"
)

// CreateStorageDiskReader is a Reader for the CreateStorageDisk structure.
type CreateStorageDiskReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateStorageDiskReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateStorageDiskOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewCreateStorageDiskDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateStorageDiskOK creates a CreateStorageDiskOK with default headers values
func NewCreateStorageDiskOK() *CreateStorageDiskOK {
	return &CreateStorageDiskOK{}
}

/*
CreateStorageDiskOK describes a response with status code 200, with default header values.

A successful response.
*/
type CreateStorageDiskOK struct {
	Payload models.CreateStorageDiskResponse
}

// IsSuccess returns true when this create storage disk o k response has a 2xx status code
func (o *CreateStorageDiskOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create storage disk o k response has a 3xx status code
func (o *CreateStorageDiskOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create storage disk o k response has a 4xx status code
func (o *CreateStorageDiskOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create storage disk o k response has a 5xx status code
func (o *CreateStorageDiskOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create storage disk o k response a status code equal to that given
func (o *CreateStorageDiskOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create storage disk o k response
func (o *CreateStorageDiskOK) Code() int {
	return 200
}

func (o *CreateStorageDiskOK) Error() string {
	return fmt.Sprintf("[POST /v1/projects/{projectId}/disks][%d] createStorageDiskOK  %+v", 200, o.Payload)
}

func (o *CreateStorageDiskOK) String() string {
	return fmt.Sprintf("[POST /v1/projects/{projectId}/disks][%d] createStorageDiskOK  %+v", 200, o.Payload)
}

func (o *CreateStorageDiskOK) GetPayload() models.CreateStorageDiskResponse {
	return o.Payload
}

func (o *CreateStorageDiskOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateStorageDiskDefault creates a CreateStorageDiskDefault with default headers values
func NewCreateStorageDiskDefault(code int) *CreateStorageDiskDefault {
	return &CreateStorageDiskDefault{
		_statusCode: code,
	}
}

/*
CreateStorageDiskDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type CreateStorageDiskDefault struct {
	_statusCode int

	Payload *models.Status
}

// IsSuccess returns true when this create storage disk default response has a 2xx status code
func (o *CreateStorageDiskDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this create storage disk default response has a 3xx status code
func (o *CreateStorageDiskDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this create storage disk default response has a 4xx status code
func (o *CreateStorageDiskDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this create storage disk default response has a 5xx status code
func (o *CreateStorageDiskDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this create storage disk default response a status code equal to that given
func (o *CreateStorageDiskDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the create storage disk default response
func (o *CreateStorageDiskDefault) Code() int {
	return o._statusCode
}

func (o *CreateStorageDiskDefault) Error() string {
	return fmt.Sprintf("[POST /v1/projects/{projectId}/disks][%d] CreateStorageDisk default  %+v", o._statusCode, o.Payload)
}

func (o *CreateStorageDiskDefault) String() string {
	return fmt.Sprintf("[POST /v1/projects/{projectId}/disks][%d] CreateStorageDisk default  %+v", o._statusCode, o.Payload)
}

func (o *CreateStorageDiskDefault) GetPayload() *models.Status {
	return o.Payload
}

func (o *CreateStorageDiskDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Status)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
CreateStorageDiskBody create storage disk body
swagger:model CreateStorageDiskBody
*/
type CreateStorageDiskBody struct {

	// data center Id
	DataCenterID string `json:"dataCenterId,omitempty"`

	// disk
	Disk *models.Disk `json:"disk,omitempty"`
}

// Validate validates this create storage disk body
func (o *CreateStorageDiskBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDisk(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateStorageDiskBody) validateDisk(formats strfmt.Registry) error {
	if swag.IsZero(o.Disk) { // not required
		return nil
	}

	if o.Disk != nil {
		if err := o.Disk.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "disk")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("body" + "." + "disk")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this create storage disk body based on the context it is used
func (o *CreateStorageDiskBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateDisk(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateStorageDiskBody) contextValidateDisk(ctx context.Context, formats strfmt.Registry) error {

	if o.Disk != nil {

		if swag.IsZero(o.Disk) { // not required
			return nil
		}

		if err := o.Disk.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "disk")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("body" + "." + "disk")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateStorageDiskBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateStorageDiskBody) UnmarshalBinary(b []byte) error {
	var res CreateStorageDiskBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
