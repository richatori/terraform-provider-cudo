// Code generated by go-swagger; DO NOT EDIT.

package virtual_machines

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewResizeVMDiskParams creates a new ResizeVMDiskParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewResizeVMDiskParams() *ResizeVMDiskParams {
	return &ResizeVMDiskParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewResizeVMDiskParamsWithTimeout creates a new ResizeVMDiskParams object
// with the ability to set a timeout on a request.
func NewResizeVMDiskParamsWithTimeout(timeout time.Duration) *ResizeVMDiskParams {
	return &ResizeVMDiskParams{
		timeout: timeout,
	}
}

// NewResizeVMDiskParamsWithContext creates a new ResizeVMDiskParams object
// with the ability to set a context for a request.
func NewResizeVMDiskParamsWithContext(ctx context.Context) *ResizeVMDiskParams {
	return &ResizeVMDiskParams{
		Context: ctx,
	}
}

// NewResizeVMDiskParamsWithHTTPClient creates a new ResizeVMDiskParams object
// with the ability to set a custom HTTPClient for a request.
func NewResizeVMDiskParamsWithHTTPClient(client *http.Client) *ResizeVMDiskParams {
	return &ResizeVMDiskParams{
		HTTPClient: client,
	}
}

/*
ResizeVMDiskParams contains all the parameters to send to the API endpoint

	for the resize VM disk operation.

	Typically these are written to a http.Request.
*/
type ResizeVMDiskParams struct {

	// DiskID.
	DiskID *string

	// ID.
	ID string

	// ProjectID.
	ProjectID string

	// SizeGib.
	//
	// Format: int32
	SizeGib *int32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the resize VM disk params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ResizeVMDiskParams) WithDefaults() *ResizeVMDiskParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the resize VM disk params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ResizeVMDiskParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the resize VM disk params
func (o *ResizeVMDiskParams) WithTimeout(timeout time.Duration) *ResizeVMDiskParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the resize VM disk params
func (o *ResizeVMDiskParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the resize VM disk params
func (o *ResizeVMDiskParams) WithContext(ctx context.Context) *ResizeVMDiskParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the resize VM disk params
func (o *ResizeVMDiskParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the resize VM disk params
func (o *ResizeVMDiskParams) WithHTTPClient(client *http.Client) *ResizeVMDiskParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the resize VM disk params
func (o *ResizeVMDiskParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDiskID adds the diskID to the resize VM disk params
func (o *ResizeVMDiskParams) WithDiskID(diskID *string) *ResizeVMDiskParams {
	o.SetDiskID(diskID)
	return o
}

// SetDiskID adds the diskId to the resize VM disk params
func (o *ResizeVMDiskParams) SetDiskID(diskID *string) {
	o.DiskID = diskID
}

// WithID adds the id to the resize VM disk params
func (o *ResizeVMDiskParams) WithID(id string) *ResizeVMDiskParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the resize VM disk params
func (o *ResizeVMDiskParams) SetID(id string) {
	o.ID = id
}

// WithProjectID adds the projectID to the resize VM disk params
func (o *ResizeVMDiskParams) WithProjectID(projectID string) *ResizeVMDiskParams {
	o.SetProjectID(projectID)
	return o
}

// SetProjectID adds the projectId to the resize VM disk params
func (o *ResizeVMDiskParams) SetProjectID(projectID string) {
	o.ProjectID = projectID
}

// WithSizeGib adds the sizeGib to the resize VM disk params
func (o *ResizeVMDiskParams) WithSizeGib(sizeGib *int32) *ResizeVMDiskParams {
	o.SetSizeGib(sizeGib)
	return o
}

// SetSizeGib adds the sizeGib to the resize VM disk params
func (o *ResizeVMDiskParams) SetSizeGib(sizeGib *int32) {
	o.SizeGib = sizeGib
}

// WriteToRequest writes these params to a swagger request
func (o *ResizeVMDiskParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.DiskID != nil {

		// query param diskId
		var qrDiskID string

		if o.DiskID != nil {
			qrDiskID = *o.DiskID
		}
		qDiskID := qrDiskID
		if qDiskID != "" {

			if err := r.SetQueryParam("diskId", qDiskID); err != nil {
				return err
			}
		}
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	// path param projectId
	if err := r.SetPathParam("projectId", o.ProjectID); err != nil {
		return err
	}

	if o.SizeGib != nil {

		// query param sizeGib
		var qrSizeGib int32

		if o.SizeGib != nil {
			qrSizeGib = *o.SizeGib
		}
		qSizeGib := swag.FormatInt32(qrSizeGib)
		if qSizeGib != "" {

			if err := r.SetQueryParam("sizeGib", qSizeGib); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
